// GENERATED by @edgedb/generate v0.5.6

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $ArticleλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "author": $.LinkDesc<$Author, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "titleImage": $.PropertyDesc<_std.$bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "published": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $Article = $.ObjectType<"default::Article", $ArticleλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Article = $.makeType<$Article>(_.spec, "1e731736-cfec-11ef-bbfa-95dda9cb54b2", _.syntax.literal);

const Article: $.$expr_PathNode<$.TypeSet<$Article, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Article, $.Cardinality.Many), null);

export type $AuthorλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "profileImage": $.PropertyDesc<_std.$bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "<author[is Article]": $.LinkDesc<$Article, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Author = $.ObjectType<"default::Author", $AuthorλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Author = $.makeType<$Author>(_.spec, "1e71f272-cfec-11ef-ab21-fb2ae13a217d", _.syntax.literal);

const Author: $.$expr_PathNode<$.TypeSet<$Author, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Author, $.Cardinality.Many), null);

export type $LaptopλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "cores": $.PropertyDesc<_std.$int32, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "price": $.PropertyDesc<_std.$int32, $.Cardinality.AtMostOne, false, false, false, false>;
  "ram": $.PropertyDesc<_std.$int32, $.Cardinality.AtMostOne, false, false, false, false>;
  "saleOf": $.PropertyDesc<_std.$int32, $.Cardinality.AtMostOne, false, false, false, false>;
  "size": $.PropertyDesc<_std.$int32, $.Cardinality.AtMostOne, false, false, false, false>;
  "titleImage": $.PropertyDesc<_std.$bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "topFrequency": $.PropertyDesc<_std.$float32, $.Cardinality.AtMostOne, false, false, false, false>;
  "priceHistory": $.PropertyDesc<$.ArrayType<_std.$int32>, $.Cardinality.AtMostOne, false, false, false, false>;
  "affiliate": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "forGaming": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "forProgrammers": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "forStudents": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "forWork": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "linux": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "macos": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "windows": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "storage": $.PropertyDesc<_std.$int32, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $Laptop = $.ObjectType<"default::Laptop", $LaptopλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Laptop = $.makeType<$Laptop>(_.spec, "1e74de34-cfec-11ef-b870-d768a8631930", _.syntax.literal);

const Laptop: $.$expr_PathNode<$.TypeSet<$Laptop, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Laptop, $.Cardinality.Many), null);



export { $Article, Article, $Author, Author, $Laptop, Laptop };

type __defaultExports = {
  "Article": typeof Article;
  "Author": typeof Author;
  "Laptop": typeof Laptop
};
const __defaultExports: __defaultExports = {
  "Article": Article,
  "Author": Author,
  "Laptop": Laptop
};
export default __defaultExports;
